PROJECT(VLC)

FIND_PACKAGE(LibVLC)

set(Boost_USE_STATIC_LIBS        OFF)
set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME     OFF)
ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)
FIND_PACKAGE(Boost REQUIRED COMPONENTS system)
FIND_PACKAGE(CUDA REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED core videoio)
FIND_PACKAGE(Qt5 REQUIRED COMPONENTS Core Network Gui Widgets)
INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_SOURCE_DIR}/include
        ${INCLUDE_DIRS}
	${LIBVLC_INCLUDE_DIR}
	${INCLUDE_DIRS}

)

LINK_DIRECTORIES(${CUDA_TOOLKIT_ROOT_DIR}/lib/x64)
LINK_DIRECTORIES(${LINK_DIRS})


FILE(GLOB_RECURSE src "src/*.cpp")
FILE(GLOB_RECURSE hdr "include/*.h")

MESSAGE(STATUS
" ============== VLC ==================
	${src}

	${hdr}

    ${LIBVLC_LIBRARY}

${INCLUDE_DIRS}
"
)
IF(NOT ${LIBVLC_LIBRARY} MATCHES "NOTFOUND")
	CUDA_ADD_LIBRARY(VLC SHARED ${src} ${hdr})
	ADD_DEPENDENCIES(VLC EagleLib)
	TARGET_LINK_LIBRARIES(VLC 
		${LIBVLC_LIBRARY} 
		${LIBVLCCORE_LIBRARY} 
                ${LINK_LIBS}
		opencv_core
		opencv_videoio
		EagleLib
		${LINK_LIBS}
		) 

	SET(LIB_DIRS "C:/Program Files/VideoLan/vlc/sdk/lib")
	GET_PROPERTY(dirs TARGET VLC PROPERTY INCLUDE_DIRECTORIES)
	FOREACH(dir ${INCLUDE_DIRS})
	LIST(REMOVE_ITEM dirs ${dir})
	ENDFOREACH()



	LIST(REMOVE_DUPLICATES dirs)
	STRING(REGEX REPLACE ";" "+" RCC_INCLUDE_DEPENDENCIES "${dirs}+" )

	ADD_DEFINITIONS(-DPROJECT_INCLUDES_="${RCC_INCLUDE_DEPENDENCIES}")
	ADD_DEFINITIONS(-DPROJECT_LIB_DIRS_="${Qt5_DIR}/../../+${LIB_DIRS}+")
ENDIF()
