CMAKE_POLICY(SET CMP0020 NEW)
IF(${CMAKE_VERSION} VERSION_GREATER 3.1)
CMAKE_POLICY(SET CMP0053 OLD)
ENDIF()

set(BOOST_REQUIRED_MODULES system filesystem thread date_time iostreams chrono)
LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

find_package(Boost 1.47.0 REQUIRED COMPONENTS ${BOOST_REQUIRED_MODULES})
find_package(CUDA REQUIRED)

find_package(OpenCV 3.0 REQUIRED core imgproc highgui cudaimgproc cudawarping cudafeatures2d cudaoptflow cudacodec cudastereo)
set_target_properties(${OpenCV_LIBS} PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO RELEASE)
FIND_PACKAGE(FLANN REQUIRED)

IF(EAGLELIB_FLANN_LIBRARY_DEBUG AND EAGLELIB_FLANN_CUDA_LIBRARY_DEBUG)
	FILE(GLOB_RECURSE src "src/*.cpp")
	FILE(GLOB_RECURSE hdr "src/*.hpp" "src/*.h")
	FILE(GLOB_RECURSE knl "src/*.cu")
	LIST(APPEND CUDA_NVCC_FLAGS_DEBUG "-g;-G;-lineinfo")
	INCLUDE_DIRECTORIES(
		${CMAKE_CURRENT_SOURCE_DIR}
		${EagleLib_INCLUDE_DIRECTORIES}
        ${OpenCV_INCLUDE_DIRS}
        ${Boost_INCLUDE_DIRS}
        ${CUDA_INCLUDE_DIRS}
		${EAGLELIB_FLANN_INCLUDE_DIR}
		)
	GET_FILENAME_COMPONENT(FLANN_LIB_DIR "${EAGLELIB_FLANN_LIBRARY_DEBUG}" PATH)
	ADD_DEFINITIONS(-DPROJECT_INCLUDES="${EAGLELIB_FLANN_INCLUDE_DIR}")
	ADD_DEFINITIONS(-DPROJECT_LIB_DIRS="${FLANN_LIB_DIR}")
	ADD_DEFINITIONS(-DPARAMETERS_USE_UI)
	LINK_DIRECTORIES(${LINK_DIRS})
	CUDA_ADD_LIBRARY(Flann SHARED ${src} ${hdr} ${knl})
	add_dependencies(Flann EagleLib)
	target_link_libraries(Flann
        EagleLib
        ${OpenCV_LIBS}
        ${CUDA_CUBLAS_LIBRARIES}
        ${LINK_LIBS}
		debug;${EAGLELIB_FLANN_CUDA_LIBRARY_DEBUG}
		optimized;${EAGLELIB_FLANN_CUDA_LIBRARY_RELEASE}
		debug;${EAGLELIB_FLANN_LIBRARY_DEBUG}
		optimized;${EAGLELIB_FLANN_LIBRARY_RELEASE}
		)


ELSE()

MESSAGE("Flann not found, not building flann module")
ENDIF()