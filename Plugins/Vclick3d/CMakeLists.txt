PROJECT(Vclick3d)
CMAKE_POLICY(SET CMP0020 NEW)
FIND_PACKAGE(Qt5Network)
IF(Qt5Network_FOUND)
FIND_PACKAGE(OpenCV REQUIRED COMPONENTS core videoio highgui)
set_target_properties(${OpenCV_LIBS} PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO RELEASE)
FIND_PACKAGE(CUDA REQUIRED)


INCLUDE_DIRECTORIES(
	${EagleLib_INCLUDE_DIRECTORIES}
	"${CMAKE_CURRENT_SOURCE_DIR}/include"
	${Qt5Network_INCLUDE_DIRS}
	${Qt5Core_INCLUDE_DIRS}
)

FILE(GLOB_RECURSE hdrs "include/*.h")
FILE(GLOB_RECURSE src "src/*.cpp")

QT5_WRAP_CPP(MOC ${hdrs})
LINK_DIRECTORIES(${LINK_DIRS})
CUDA_ADD_LIBRARY(Vclick3d SHARED ${hdrs} ${src} ${MOC})
ADD_DEPENDENCIES(Vclick3d EagleLib)
SET(GLOOX_LIBRARY "" CACHE FILEPATH "")
SET(GLOOX_INCLUDE_DIR "" CACHE PATH "")
INCLUDE_DIRECTORIES(${GLOOX_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(Vclick3d 
	${OpenCV_LIBS}
	Qt5::Network
    Qt5::Core
	${EagleLib_LIBRARIES} 
    ${LINK_LIBS}
	EagleLib
	${GLOOX_LIBRARY}
	)

INCLUDE(../PluginTemplate.cmake)

ELSE(Qt5Network_FOUND)
MESSAGE("Qt5Network not found, not building Vclick3d plugin")
ENDIF(Qt5Network_FOUND)
