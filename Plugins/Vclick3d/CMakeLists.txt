PROJECT(Vclick3d)
CMAKE_POLICY(SET CMP0020 NEW)
FIND_PACKAGE(Qt5Network)
IF(Qt5Network_FOUND)
FIND_PACKAGE(OpenCV REQUIRED COMPONENTS core videoio highgui)
set_target_properties(${OpenCV_LIBS} PROPERTIES MAP_IMPORTED_CONFIG_RELWITHDEBINFO RELEASE)
FIND_PACKAGE(CUDA REQUIRED)


INCLUDE_DIRECTORIES(
	${EagleLib_INCLUDE_DIRECTORIES}
	"${CMAKE_CURRENT_SOURCE_DIR}/include"
	${Qt5Network_INCLUDE_DIRS}
	${Qt5Core_INCLUDE_DIRS}
)

FILE(GLOB_RECURSE hdrs "include/*.h")
FILE(GLOB_RECURSE src "src/*.cpp")

QT5_WRAP_CPP(MOC ${hdrs})
LINK_DIRECTORIES(${LINK_DIRS})
CUDA_ADD_LIBRARY(Vclick3d SHARED ${hdrs} ${src} ${MOC})
ADD_DEPENDENCIES(Vclick3d EagleLib)
SET(GLOOX_LIBRARY "" CACHE FILEPATH "")
SET(GLOOX_INCLUDE_DIR "" CACHE PATH "")
INCLUDE_DIRECTORIES(${GLOOX_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(Vclick3d 
	${OpenCV_LIBS}
	Qt5::Network
    Qt5::Core
	${EagleLib_LIBRARIES} 
    ${LINK_LIBS}
	EagleLib
	${GLOOX_LIBRARY}
	)

GET_PROPERTY(dirs TARGET Vclick3d PROPERTY INCLUDE_DIRECTORIES)
FOREACH(dir ${INCLUDE_DIRS})
LIST(REMOVE_ITEM dirs ${dir})
ENDFOREACH()
STRING(REGEX REPLACE ";" "+" RCC_INCLUDE_DEPENDENCIES "${dirs}" )
ADD_DEFINITIONS(-DPROJECT_INCLUDES="${RCC_INCLUDE_DEPENDENCIES}")
ADD_DEFINITIONS(-DPROJECT_BUILD_DIR="${CMAKE_CURRENT_BINARY_DIR}")
#ADD_DEFINITIONS(-DPROJECT_LIB_DIRS="${LINK_DIRS}")


MESSAGE(STATUS
"============== VClick3D ===============
	${hdrs}

	${src}

	${MOC}

	${Qt5Network_INCLUDE_DIRS}

	${Qt5Core_INCLUDE_DIRS}

	${EagleLib_INCLUDE_DIRECTORIES}

	${RCC_INCLUDE_DEPENDENCIES}

	${Qt5_DIR}

	${CMAKE_CXX_FLAGS}

	${CMAKE_CXX_FLAGS_DEBUG}

	${CMAKE_CXX_FLAGS_RELEASE}

	${CMAKE_C_FLAGS}
")
ELSE(Qt5Network_FOUND)
MESSAGE("Qt5Network not found, not building Vclick3d plugin")
ENDIF(Qt5Network_FOUND)
