#pragma once
#include "RuntimeLinkLibrary.h"
#include <EagleLib/Defs.hpp>
#include <EagleLib/Project_defs.hpp>
#include "plotters/Plotter.h"


#include <rendering/RenderingEngine.h>
#include <vtkRenderWindow.h>
#include <vtkRenderer.h>
#include <vtkSmartPointer.h>
#include <vtkOpenGLTexture.h>
#include <opencv2/core/opengl.hpp>
#include <boost/thread/mutex.hpp>
#include <vtkTextureObject.h>
#define VTK_VERSION "7.1"
#ifdef _MSC_VER
#ifdef _DEBUG
RUNTIME_COMPILER_LINKLIBRARY("vtkalglib-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkChartsCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonColor-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonDataModel-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonMath-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtksys-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonMisc-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonSystem-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonTransforms-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInfovisCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersExtraction-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonExecutionModel-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeneral-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonComputationalGeometry-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersStatistics-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingFourier-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingContext2D-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeometry-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSources-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingFreeType-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkfreetype-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkzlib-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkftgl-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkDICOMParser-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkDomainsChemistry-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOXML-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOGeometry-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOXMLParser-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkexpat-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkexoIIc-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkNetCDF-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkNetCDF_cxx-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkhdf5_hl-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkhdf5-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersAMR-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkParallelCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOLegacy-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersFlowPaths-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeneric-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersHybrid-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingSources-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersHyperTree-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersImaging-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingGeneral-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersModeling-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersParallel-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersParallelImaging-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersProgrammable-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSelection-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSMP-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersTexture-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersVerdict-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("verdict-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGeovisCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInfovisLayout-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingHybrid-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOImage-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkmetaio-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkjpeg-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkpng-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtktiff-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionStyle-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionWidgets-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingAnnotation-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingColor-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingVolume-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsCore-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkproj4-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkgl2ps-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQt-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingOpenGL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtOpenGL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtSQL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOSQL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtksqlite-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtWebkit-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsQt-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsInfovis-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLabel-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingMath-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingMorphological-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingStatistics-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingStencil-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionImage-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOAMR-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOEnSight-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOExodus-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOExport-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingGL2PS-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingContextOpenGL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOImport-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOInfovis-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtklibxml2-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOLSDyna-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOMINC-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOMovie-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkoggtheora-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIONetCDF-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOParallel-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkjsoncpp-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOParallelXML-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOPLY-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOVideo-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingImage-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLIC-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLOD-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingQt-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingVolumeOpenGL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingGenericBridge-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingIOSQL-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingRendering-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsContext2D-" VTK_VERSION "d.lib");
RUNTIME_COMPILER_LINKLIBRARY("Qt5Widgetsd.lib")
RUNTIME_COMPILER_LINKLIBRARY("Qt5Guid.lib")
RUNTIME_COMPILER_LINKLIBRARY("Qt5Cored.lib")
RUNTIME_COMPILER_LINKLIBRARY("libParameterd.lib")
#else
RUNTIME_COMPILER_LINKLIBRARY("libParameter.lib")
RUNTIME_COMPILER_LINKLIBRARY("vtkalglib-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkChartsCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonColor-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonDataModel-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonMath-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtksys-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonMisc-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonSystem-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonTransforms-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInfovisCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersExtraction-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonExecutionModel-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeneral-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkCommonComputationalGeometry-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersStatistics-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingFourier-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingContext2D-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeometry-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSources-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingFreeType-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkfreetype-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkzlib-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkftgl-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkDICOMParser-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkDomainsChemistry-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOXML-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOGeometry-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOXMLParser-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkexpat-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkexoIIc-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkNetCDF-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkNetCDF_cxx-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkhdf5_hl-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkhdf5-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersAMR-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkParallelCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOLegacy-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersFlowPaths-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersGeneric-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersHybrid-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingSources-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersHyperTree-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersImaging-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingGeneral-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersModeling-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersParallel-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersParallelImaging-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersProgrammable-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSelection-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersSMP-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersTexture-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkFiltersVerdict-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("verdict-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGeovisCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInfovisLayout-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingHybrid-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOImage-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkmetaio-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkjpeg-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkpng-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtktiff-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionStyle-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionWidgets-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingAnnotation-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingColor-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingVolume-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsCore-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkproj4-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkgl2ps-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQt-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingOpenGL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtOpenGL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtSQL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOSQL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtksqlite-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkGUISupportQtWebkit-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsQt-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsInfovis-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLabel-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingMath-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingMorphological-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingStatistics-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkImagingStencil-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkInteractionImage-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOAMR-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOEnSight-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOExodus-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOExport-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingGL2PS-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingContextOpenGL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOImport-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOInfovis-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtklibxml2-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOLSDyna-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOMINC-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOMovie-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkoggtheora-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIONetCDF-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOParallel-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkjsoncpp-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOParallelXML-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOPLY-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkIOVideo-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingImage-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLIC-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingLOD-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingQt-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkRenderingVolumeOpenGL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingGenericBridge-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingIOSQL-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkTestingRendering-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("vtkViewsContext2D-" VTK_VERSION ".lib");
RUNTIME_COMPILER_LINKLIBRARY("Qt5Widgets.lib")
RUNTIME_COMPILER_LINKLIBRARY("Qt5Gui.lib")
RUNTIME_COMPILER_LINKLIBRARY("Qt5Core.lib")
#endif

#else


#endif
SETUP_PROJECT_DEF
class QVTKWidget;
namespace EagleLib
{
	class vtkOpenGLCudaImage : public vtkTextureObject
	{
	public:
		static vtkOpenGLCudaImage* New();
		vtkTypeMacro(vtkOpenGLCudaImage, vtkTextureObject);
		void map_gpu_mat(cv::cuda::GpuMat image);
		virtual void Bind();
		virtual void UnBind();
	private:
		//virtual long GetIndex();
		vtkOpenGLCudaImage();
		// Only holds the binding of the memory
		cv::ogl::Texture2D image_buffer;
		boost::mutex mtx;
	};

	class vtkPlotter : public QtPlotter
	{
	protected:
		std::list<QVTKWidget*> render_widgets;
		vtkSmartPointer<vtkRenderer> renderer;
	public:
		vtkPlotter();
		virtual bool AcceptsParameter(Parameters::Parameter::Ptr param);
		virtual void SetInput(Parameters::Parameter::Ptr param_ = Parameters::Parameter::Ptr());
		virtual void OnParameterUpdate(cv::cuda::Stream* stream);
		virtual std::string PlotName() const;

		virtual void AddPlot(QWidget* plot_);

		virtual QWidget* CreatePlot(QWidget* parent);
		virtual QWidget* GetControlWidget(QWidget* parent);
		
		virtual void Serialize(ISimpleSerializer *pSerializer);
		virtual void Init(bool firstInit);
	};

	class vtkImageViewer : public vtkPlotter
	{

		
	public:
		vtkSmartPointer<vtkOpenGLCudaImage> textureObject;
		vtkSmartPointer<vtkOpenGLTexture> texture;
		vtkImageViewer();
		virtual bool AcceptsParameter(Parameters::Parameter::Ptr param);
		virtual void SetInput(Parameters::Parameter::Ptr param_ = Parameters::Parameter::Ptr());
		virtual void OnParameterUpdate(cv::cuda::Stream* stream);
		virtual std::string PlotName() const;
	};
}
