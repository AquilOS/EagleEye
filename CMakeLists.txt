cmake_minimum_required(VERSION 2.8)

project(EagleEye)

set(BUILD_TYPE STATIC)
CMAKE_POLICY(SET CMP0020 NEW)
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/cmake")
SET(CMAKE_CONFIGURATION_TYPES "Debug;Release")
SET(CMAKE_VERBOSE_MAKEFILE "true")
SET(CMAKE_DEBUG_POSTFIX "d")
STRING(TOUPPER "${CMAKE_BUILD_TYPE}" _BUILD_TYPE)

IF(WIN32)
        set(Boost_USE_STATIC_LIBS        OFF)
        set(Boost_USE_MULTITHREADED      ON)
        set(Boost_USE_STATIC_RUNTIME     OFF)
		ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)
		
ELSE(WIN32)

        set(Boost_USE_STATIC_LIBS        OFF)
        set(Boost_USE_MULTITHREADED      ON)
        set(Boost_USE_STATIC_RUNTIME     OFF)

ENDIF(WIN32)


IF(WIN32)
    add_definitions(-DWIN32)
    add_definitions(-D_WIN32)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
	
	SET(CMAKE_CONFIGURATION_TYPES "Debug;Release;RelWithDebInfo")
    SET(CMAKE_CXX_FLAGS "/EHsc /FC /Zo /d2Zi+ /Zi /MP" CACHE STRING "" FORCE)
    SET(CMAKE_CXX_FLAGS_DEBUG "/MDd /Od" CACHE STRING "" FORCE)
	SET(CMAKE_CXX_FLAGS_RELEASE "/MD /Zi /O2 /Ob1 /D NDEBUG" CACHE STRING "" FORCE)
    #SET(CMAKE_CXX_FLAGS_RELEASE "/MD /O2")
	SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MD /O2" CACHE STRING "" FORCE)
	ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS)
	ADD_DEFINITIONS(-D_WIN32_WINNT=0x0501)
	
ELSE(WIN32)
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wno-reorder -Wno-sign-compare -Wl,--no-as-needed -O0")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fPIC -g")
    SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin/Plugins" CACHE PATH "Library output path" FORCE)
    SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/bin" CACHE PATH "Executable output path" FORCE)

ENDIF(WIN32)
SET(EAGLE_LIB_JETSON FALSE CACHE BOOL "True if building for jetson platform")
add_subdirectory(EagleLib)

SET(LINK_DIRS "${EagleLib_LIB_DIRS_DEBUG};${EagleLib_LIB_DIRS_RELASE}")
SET(INCLUDE_DIRS ${EagleLib_INCLUDE_DIRECTORIES})
SET(LINK_LIBS ${EagleLib_LIBRARIES})
SET(DEFS ${EagleLib_DEFS})

MESSAGE(${LINK_DIRS})
add_subdirectory(EagleEye)
add_subdirectory(Plugins)
add_subdirectory(samples)
add_subdirectory(tests)
