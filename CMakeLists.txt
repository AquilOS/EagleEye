cmake_minimum_required(VERSION 2.8)

project(EagleEye)

set(BUILD_TYPE STATIC)
CMAKE_POLICY(SET CMP0020 NEW)
SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/cmake")
SET(CMAKE_CONFIGURATION_TYPES "Debug;Release")
SET(CMAKE_VERBOSE_MAKEFILE "true")
SET(CMAKE_DEBUG_POSTFIX "d")
STRING(TOLOWER "${CMAKE_BUILD_TYPE}" _BUILD_TYPE)

IF(WIN32)
    add_definitions(-DWIN32)
    add_definitions(-D_WIN32)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")
	
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHsc /FC /d2Zi+ /Zi")
    SET(CMAKE_CXX_FLAGS_DEBUG "/MDd")
    SET(CMAKE_CXX_FLAGS_RELEASE "/MD")
	SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "/MD")
	
ELSE(WIN32)
    SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wno-reorder -Wno-sign-compare -g -std=c++11 -Wl,--no-as-needed -fPIC -g -O0")
    SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -std=c++11 -O2 -fPIC")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -Wl,--no-as-needed -fPIC")
	IF(${_BUILD_TYPE} MATCHES debug)
		SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/Bin/Debug/Plugins" CACHE PATH "Library output path")
		SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/Bin/Debug" CACHE PATH "Executable output path")
	ELSE()
		SET(LIBRARY_OUTPUT_PATH "${CMAKE_BINARY_DIR}/Bin/Release/Plugins" CACHE PATH "Library output path")
		SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_BINARY_DIR}/Bin/Release" CACHE PATH "Executable output path")
	ENDIF()
ENDIF(WIN32)

add_subdirectory(EagleLib)
SET(LINK_DIRS "${EagleLib_LIB_DIRS_DEBUG};${EagleLib_LIB_DIRS_RELASE}")
SET(INCLUDE_DIRS ${EagleLib_INCLUDE_DIRECTORIES})
SET(LINK_LIBS ${EagleLib_LIBRARIES})
MESSAGE(${LINK_DIRS})
add_subdirectory(EagleEye)
add_subdirectory(Plugins)
add_subdirectory(samples)
add_subdirectory(tests)
